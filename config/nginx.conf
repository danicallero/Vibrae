# Vibrae Nginx Configuration
# This file is used on macOS for local reverse proxy

worker_processes auto;
error_log ${FRONTEND_ROOT}/../../../logs/nginx-error.log warn;
pid /tmp/nginx.vibrae.pid;

events {
    worker_connections 1024;
}

http {
    access_log ${FRONTEND_ROOT}/../../../logs/nginx-access.log combined;
    
    # WebSocket upgrade support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Temp paths (required for non-root nginx)
    client_body_temp_path /tmp/nginx_client_body;
    proxy_temp_path /tmp/nginx_proxy;
    fastcgi_temp_path /tmp/nginx_fastcgi;
    uwsgi_temp_path /tmp/nginx_uwsgi;
    scgi_temp_path /tmp/nginx_scgi;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # MIME types
    include /opt/homebrew/etc/nginx/mime.types;
    default_type application/octet-stream;

    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/javascript application/json application/xml+rss;

    # Backend API upstream
    upstream backend {
        server 127.0.0.1:${BACKEND_PORT};
        keepalive 32;
    }

    server {
        listen 80;
        server_name ${DOMAIN};

        # Root directory for static files
        root ${FRONTEND_ROOT};
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # API endpoints - proxy to backend
        location /api/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # Support WebSocket upgrade for /api/control/ws
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts (extended for WebSocket)
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # WebSocket endpoint - proxy to backend with upgrade
        # Note: WebSocket is at /api/control/ws, handled by /api/ location block
        # This block is for legacy /ws endpoint (if needed)
        location /ws {
            proxy_pass http://backend/api/control/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # WebSocket timeouts (longer for persistent connections)
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Static files - serve directly from filesystem
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # Don't cache HTML
            location ~* \.html$ {
                expires -1;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Block hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
