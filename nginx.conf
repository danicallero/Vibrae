events {}

http {
    upstream vib_frontend {
        server 127.0.0.1:${FRONTEND_PORT};       # npx serve (preferred)
        server 127.0.0.1:${BACKEND_PORT} backup; # backend StaticFiles fallback
    }

    server {
        listen 80;
        server_name ${DOMAIN};

        # Proxy API requests to backend
        location ^~ /api/control/ws {
            proxy_pass http://127.0.0.1:${BACKEND_PORT}/control/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        # Handle API root without trailing slash
        location = /api {
            return 301 /api/;
        }

        location ^~ /api/ {
            # Strip the /api/ prefix when proxying to backend by using a trailing slash in proxy_pass
            # e.g. /api/users/validate -> /users/validate
            proxy_pass http://127.0.0.1:${BACKEND_PORT}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Ensure auth header is preserved for OAuth2 bearer token
            proxy_set_header Authorization $http_authorization;
            proxy_http_version 1.1;
        }

        # All non-API requests go to frontend upstream (npx preferred, backend fallback)
        location / {
            proxy_pass http://vib_frontend$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}